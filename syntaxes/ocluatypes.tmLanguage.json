{
	"comment": "Lua Syntax: version 0.8",
	"fileTypes": [],
	"firstLineMatch": "\\A#!.*?\\blua(\\d+(\\.\\d+)?)?\\b|\\A--\\s+-\\*-\\s*lua\\s*-\\*-",
	"keyEquivalent": "^~L",
	"name": "Lua + Types (MTA:SA)",
	"patterns": [
		{
			"begin": "\\b((local\\b)\\s+)?(function)\\s*(\\s+[a-zA-Z_][a-zA-Z0-9_]*(\\.[a-zA-Z_][a-zA-Z0-9_]*)*(:[a-zA-Z_][a-zA-Z0-9_]*)?\\s*)?(\\()",
			"beginCaptures": {
				"1": {
					"name": "storage.modifier.local.luatypes"
				},
				"3": {
					"name": "keyword.control.luatypes"
				},
				"4": {
					"name": "entity.name.function.luatypes"
				},
				"5": {
					"name": "punctuation.definition.parameters.begin.luatypes"
				}
			},
			"end": "\\)",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.parameters.end.luatypes"
				}
			},
			"name": "meta.function.luatypes",
			"patterns": [
				{
					"match": "[a-zA-Z_][a-zA-Z0-9_]*",
					"name": "variable.parameter.function.luatypes"
				}
			]
		},
		{
			"match": "(?<![\\w\\d.])0[xX][0-9A-Fa-f]+(?![pPeE.0-9])",
			"name": "constant.numeric.integer.hexadecimal.luatypes"
		},
		{
			"match": "(?<![\\w\\d.])0[xX][0-9A-Fa-f]+(\\.[0-9A-Fa-f]+)?([eE]-?\\d*)?([pP][-+]\\d+)?",
			"name": "constant.numeric.float.hexadecimal.luatypes"
		},
		{
			"match": "(?<![\\w\\d.])\\d+(?![pPeE.0-9])",
			"name": "constant.numeric.integer.luatypes"
		},
		{
			"match": "(?<![\\w\\d.])\\d+(\\.\\d+)?([eE]-?\\d*)?",
			"name": "constant.numeric.float.luatypes"
		},
		{
			"begin": "'",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.luatypes"
				}
			},
			"end": "'",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end.luatypes"
				}
			},
			"name": "string.quoted.single.luatypes",
			"patterns": [
				{
					"include": "#escaped_char"
				}
			]
		},
		{
			"begin": "\"",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.luatypes"
				}
			},
			"end": "\"",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end.luatypes"
				}
			},
			"name": "string.quoted.double.luatypes",
			"patterns": [
				{
					"include": "#escaped_char"
				}
			]
		},
		{
			"begin": "(?<=\\.cdef)\\s*(\\[(=*)\\[)",
			"beginCaptures": {
				"0": {
					"name": "string.quoted.other.multiline.luatypes"
				},
				"1": {
					"name": "punctuation.definition.string.begin.luatypes"
				}
			},
			"contentName": "meta.embedded.luatypes",
			"end": "(\\]\\2\\])",
			"endCaptures": {
				"0": {
					"name": "string.quoted.other.multiline.luatypes"
				},
				"1": {
					"name": "punctuation.definition.string.end.luatypes"
				}
			},
			"patterns": [
				{
					"include": "source.c"
				}
			]
		},
		{
			"begin": "(?<!--)\\[(=*)\\[",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.luatypes"
				}
			},
			"end": "\\]\\1\\]",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end.luatypes"
				}
			},
			"name": "string.quoted.other.multiline.luatypes"
		},
		{
			"captures": {
				"1": {
					"name": "punctuation.definition.comment.luatypes"
				}
			},
			"match": "\\A(#!).*$\\n?",
			"name": "comment.line.shebang.luatypes"
		},
		{
			"begin": "(^[ \\t]+)?(?=--)",
			"beginCaptures": {
				"1": {
					"name": "punctuation.whitespace.comment.leading.luatypes"
				}
			},
			"end": "(?!\\G)((?!^)[ \\t]+\\n)?",
			"endCaptures": {
				"1": {
					"name": "punctuation.whitespace.comment.trailing.luatypes"
				}
			},
			"patterns": [
				{
					"begin": "--\\[(=*)\\[",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.comment.begin.luatypes"
						}
					},
					"end": "\\]\\1\\]",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.comment.end.luatypes"
						}
					},
					"name": "comment.block.luatypes"
				},
				{
					"begin": "--",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.comment.luatypes"
						}
					},
					"end": "\\n",
					"name": "comment.line.double-dash.luatypes"
				}
			]
		},
		{
			"captures": {
				"1": {
					"name": "keyword.control.goto.luatypes"
				},
				"2": {
					"name": "constant.other.placeholder.luatypes"
				}
			},
			"match": "\\b(goto)\\s+([a-zA-Z_][a-zA-Z0-9_]*)"
		},
		{
			"captures": {
				"1": {
					"name": "punctuation.definition.label.begin.luatypes"
				},
				"2": {
					"name": "punctuation.definition.label.end.luatypes"
				}
			},
			"match": "(::)[a-zA-Z_][a-zA-Z0-9_]*(::)",
			"name": "constant.other.placeholder.luatypes"
		},
		{
			"match": "\\b(component\\.(doc|invoke|list|methods|proxy|type|slot|fields|get|isAvailable|getPrimary|setPrimary)|event\\.(listen|ignore|timer|cancel|pull|pullFiltered)|computer\\.(address|tmpaddress|freememory|totalmemory|energy|maxenergy|uptime|shutdown|getbootaddress|setBootAddress|runlevel|users|adduser|removeuser|pushsignal|pullsignal|beep)|filesystem\\.(isautorunenabled|setAutorunEnabled|canonical|segments|concat|path|name|proxy|mount|mounts|umount|islink|link|get|exists|size|isdirectory|lastmodified|list|makedirectory|remove|rename|copy|open|close|read|seek|write)|uuid\\.(next)|internet\\.(request|socket|open)|keyboard\\.(isaltdown|iscontrol|iscontroldown|iskeydown|isshiftdown)|note\\.(midi|freq|name|ticks|play)|process\\.(load|info)|robot\\.(name|detect|detectup|detectdown|select|inventorysize|count|space|transferto|compareto|compare|compareup|comparedown|drop|dropup|dropdown|suck|suckup|suckdown|place|placeup|placedown|durability|swing|swingup|swingdown|use|useup|usedown|forward|back|up|down|turnleft|turnright|turnAround|tankCount|selectTank|tankLevel|tankSpace|compareFluidTo|transferFluidTo|compareFluid|compareFluidUp|compareFluidDown|drain|drainUp|drainDown|fill|fillUp|fillDown))\\b(?=\\s*(?:[({\"']|\\[\\[))",
			"name": "support.class.lua OCFunction.luatypes"
		},
		{
			"match": "\\b(break|do|else|for|if|elseif|goto|return|then|repeat|while|until|end|function|local|in)\\b",
			"name": "keyword.control.luatypes"
		},
		{
			"match": "(?<![^.]\\.|:)\\b(false|nil|true|_G|_VERSION|math\\.(pi|huge))\\b|(?<![.])\\.{3}(?!\\.)",
			"name": "constant.language.luatypes"
		},
		{
			"match": "(?<![^.]\\.|:)\\b(self)\\b",
			"name": "variable.language.self.luatypes"
		},
		{
			"match": "(?<![^.]\\.|:)\\b(assert|collectgarbage|dofile|error|getfenv|getmetatable|ipairs|loadfile|loadstring|module|next|pairs|pcall|print|rawequal|rawget|rawset|require|select|setfenv|setmetatable|tonumber|tostring|type|unpack|xpcall)\\b(?=\\s*(?:[({\"']|\\[\\[))",
			"name": "support.function.luatypes support.class.luatypes"
		},
		{
			"match": "(?<![^.]\\.|:)\\b(coroutine\\.(create|resume|running|status|wrap|yield)|string\\.(byte|char|dump|find|format|gmatch|gsub|len|lower|match|rep|reverse|sub|upper)|table\\.(concat|foreach|insert|maxn|remove|sort)|math\\.(abs|acos|asin|atan2?|ceil|cosh?|deg|exp|floor|fmod|frexp|ldexp|log|log10|max|min|modf|pow|rad|random|randomseed|sinh?|sqrt|tanh?)|io\\.(close|flush|input|lines|open|output|popen|read|tmpfile|type|write)|os\\.(clock|date|difftime|execute|exit|getenv|remove|rename|setlocale|time|tmpname)|package\\.(cpath|loaded|loadlib|path|preload|seeall)|debug\\.(debug|[gs]etfenv|[gs]ethook|getinfo|[gs]etlocal|[gs]etmetatable|getregistry|[gs]etupvalue|traceback))\\b(?=\\s*(?:[({\"']|\\[\\[))",
			"name": "support.function.library.luatypes support.class.luatypes"
		},
		{
			"match": "\\b(and|or|not)\\b",
			"name": "keyword.operator.luatypes keyword.control.luatypes"
		},
		{
			"match": "\\b(var|number|int|uint|float|string|boolean|bool|table|timer|element|ped|player|gui-memo|gui-window|gui-edit|col|txd|dff|team|vehicle|account|ban|weapon|effect|blip|searchlight|camera|browser|texture|shader|pickup|marker|projectile|object|colshape|xmlnode|water)\\b",
			"name": "keyword.operator.luatypes keyword.control.luatypes"
		},
		{
			"match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b(?=\\s*(?:[({\"']|\\[\\[))",
			"name": "support.function.any-method.luatypes"
		},
		{
			"match": "(?<=[^.]\\.|:)\\b([a-zA-Z_][a-zA-Z0-9_]*)",
			"name": "variable.other.luatypes"
		},
		{
			"match": "\\+|-|%|#|\\*|\\/|\\^|==?|~=|<=?|>=?|(?<!\\.)\\.{2}(?!\\.)",
			"name": "keyword.operator.luatypes"
		},
		{
			"match": "\\b(colors\\.(red))",
			"name": "support.class.lua OCColorRed.luatypes"
		},
		{
			"match": "\\b(colors\\.white)",
			"name": "OCColorWhite.luatypes"
		},
		{
			"match": "\\b(colors\\.orange)",
			"name": "OCColorOrange.luatypes"
		},
		{
			"match": "\\b(colors\\.magenta)",
			"name": "OCColorMagenta.luatypes"
		},
		{
			"match": "\\b(colors\\.lightblue)",
			"name": "OCColorLightblue.luatypes"
		},
		{
			"match": "\\b(colors\\.yellow)",
			"name": "OCColorYellow.luatypes"
		},
		{
			"match": "\\b(colors\\.lime)",
			"name": "OCColorLime.luatypes"
		},
		{
			"match": "\\b(colors\\.pink)",
			"name": "OCColorPink.luatypes"
		},
		{
			"match": "\\b(colors\\.gray)",
			"name": "OCColorGray.luatypes"
		},
		{
			"match": "\\b(colors\\.silver)",
			"name": "OCColorSilver.luatypes"
		},
		{
			"match": "\\b(colors\\.cyan)",
			"name": "OCColorCyan.luatypes"
		},
		{
			"match": "\\b(colors\\.purple)",
			"name": "OCColorPurple.luatypes"
		},
		{
			"match": "\\b(colors\\.blue)",
			"name": "OCColorBlue.luatypes"
		},
		{
			"match": "\\b(colors\\.brown)",
			"name": "OCColorBrown.luatypes"
		},
		{
			"match": "\\b(colors\\.green)",
			"name": "OCColorGreen.luatypes"
		},
		{
			"match": "\\b(colors\\.black)",
			"name": "OCColorBlack.luatypes"
		}
	],
	"repository": {
		"escaped_char": {
			"patterns": [
				{
					"match": "\\\\[abfnrtvz\\\\\"'\\n]",
					"name": "constant.character.escape.luatypes"
				},
				{
					"match": "\\\\\\d{1,3}",
					"name": "constant.character.escape.byte.luatypes"
				},
				{
					"match": "\\\\x[0-9A-Fa-f][0-9A-Fa-f]",
					"name": "constant.character.escape.byte.luatypes"
				},
				{
					"match": "\\\\u\\{[0-9A-Fa-f]+\\}",
					"name": "constant.character.escape.unicode.luatypes"
				},
				{
					"match": "\\\\.",
					"name": "invalid.illegal.character.escape.luatypes"
				}
			]
		}
	},
	"scopeName": "source.luatypes",
	"uuid": "93E017CC-6F27-11D9-90EB-000D93589AF8"
}